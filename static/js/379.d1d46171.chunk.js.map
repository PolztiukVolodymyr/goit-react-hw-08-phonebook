{"version":3,"file":"static/js/379.d1d46171.chunk.js","mappings":"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","sources":["components/redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getIsRefreshing = state => state.contacts.isRefreshing;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"form\":\"ContactForm_form__dhl+T\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from \"../../components/redux/contacts/contactOperations\";\nimport { getContacts, getIsRefreshing } from \"../../components/redux/contacts/contactsSelectors\";\n\nimport css from './ContactForm.module.css';\n\n\nexport default function ContactForm() {\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isChanging = useSelector(getIsRefreshing);\n\n\n  const handleChange = evt => {\n    if (evt.target.name === \"name\") {\n      setName(evt.target.value);\n    };\n    if (evt.target.name === \"number\") {\n      setNumber(evt.target.value);\n    };\n  };\n    \n const  handleSubmit = evt => {\n   evt.preventDefault();\n   \n   if (contacts.find(contact =>\n        contact.name.toLocaleLowerCase() === name.toLocaleLowerCase())\n      ) {\n       reset();\n       return toast.warning(`${name} is alredy in contacts`);\n       \n   };\n   \n   if (name && number) {\n     dispatch(addContact({ name: name, number: number }));\n      toast.success(`Contact created`);\n       reset();\n   };\n       \n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n      \n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder={\"Enter name\"}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\n         For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder={\"Enter number\"}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes,\n         parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" disabled={isChanging}>Add contact</button>\n      <ToastContainer theme=\"colored\" autoClose={2000}/>\n    </form>\n  );\n};\n\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from \"./ContactList.module.css\";\nimport { editContact, deleteContact } from '../redux/contacts/contactOperations';\nimport { getContacts } from '../redux/contacts/contactsSelectors';\n// import { useDeleteContactMutation } from \"../../redux/Api\";\n\n\nconst ContactItem = ({  id, name, number }) => {\n     // const [deleteContact, { isLoading: isDeliting }] = useDeleteContactMutation();\n    // isDeliting && toast.success(`Contact deleted`, { theme: \"dark\" });\n  \n   const [changeName, setChangeName] = useState(name);\n   const [changeNumber, setChangeNumber] = useState(number);\n   const [changeContact, setChangeContact] = useState(false);\n   const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  \n     const handelChengeContact = () => {\n      if (changeContact) {\n         if (name === changeName && number === changeNumber) {\n            setChangeContact(!changeContact);\n            return;\n         }\n         if (\n            contacts.find(contact =>\n                  contact.name.toLocaleLowerCase() ===\n                     changeName.toLocaleLowerCase() && contact.id !== id\n            )\n         ) {\n            toast.warning(`${changeName} is alredy in contacts`);\n            return;\n         }\n         dispatch(editContact({\n               id,\n               name: changeName,\n               number: changeNumber,\n            })\n         );\n      }\n      setChangeContact(!changeContact);\n  };\n  \n     return (\n      <li className={css.item} id={id}>\n         {changeContact ? (\n            <>\n               <input\n                  className={css.input}\n                  type=\"name\"\n                  name=\"name\"\n                  value={changeName}\n                  placeholder=\"Name Lastname\"\n                  required\n                  onChange={evt => setChangeName(evt.target.value)}\n               />\n               <input\n                  className={css.input}\n                  type=\"tel\"\n                  name=\"number\"\n                  value={changeNumber}\n                  placeholder=\"XXX-XX-XX\"\n                  required\n                  onChange={evt => setChangeNumber(evt.target.value)}\n               />\n            </>\n         ) : (\n            <>\n               <span className={css.name}>{name}: </span>\n               <span>{number}</span>\n            </>\n         )}\n         <div className={css.BlockButtons}>\n            <div className={css.btn}>\n               <button type=\"button\" onClick={handelChengeContact}>\n                  {changeContact ? 'Save' : 'Edit'}\n               </button>\n            </div>\n            <div className={css.BtnWrap}>\n               <button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(id))}\n               >\n                  Delete\n               </button>\n            </div>\n         </div>\n      </li>\n   );\n  \n  // return (\n       \n  //       <li key={id} className={css.item}>\n  //         <p>\n  //           {name}: {number}\n  //         </p>\n  //          <button type=\"button\" onClick={() => deleteContact(id)} disabled={isDeliting}>\n  //             {isDeliting ? \"Deletind\" : \"Delete\"}\n  //          </button>\n  //       </li>\n           \n  //  );\n};\n\nexport default ContactItem;\n\nContactItem.propType = {\n   id: PropTypes.string.isRequired,\n   name: PropTypes.string.isRequired,\n   number: PropTypes.string.isRequired,\n};","import  ContactItem  from \"./ContactItem\";\nimport css from \"./ContactList.module.css\";\n\nconst ContactList = ({contacts}) => {\n\n  return (\n    <ul className={css.list}>\n      {contacts && contacts.map(({ id, name, number })=> (\n         <ContactItem\n            key={id}\n            id={id}\n            data={contacts}\n            name={name}\n            number={number}\n          />\n      ))}\n     </ul>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n\n   return (\n      <label className={css.label}>\n         Filter\n         <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onChange}\n         />\n      </label>\n   );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n   filter: PropTypes.string,\n   onChange: PropTypes.func,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PhoneBook_container__qH1yN\",\"wrap\":\"PhoneBook_wrap__pI6ok\",\"title\":\"PhoneBook_title__QJwXO\",\"titleSection\":\"PhoneBook_titleSection__LFcLz\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { fetchContacts } from \"../redux/contacts/contactOperations\";\n// import { changeFilter } from \"../redux/contacts/contactSlice\";\nimport css from './PhoneBook.module.css';\n\nexport default function PhoneBook() {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  // const isLoading = useSelector(state => state.contacts.isLoading);\n  // const isRefreshing = useSelector(state => state.contacts.isRefreshing);\n\n\n  // Спробцвати dispatch-нути напряму changeFilter-ом без setFilter-а\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n    useEffect(() => {\n    dispatch(fetchContacts());\n    }, [dispatch]);\n  \n  //  const  isVisibleContacts = () => {\n\t\t// \tif (contacts) {\n  //     if (contacts.length !== 0) {\n  //       console.log(contacts);\n  //       return contacts.filter(contact =>\n  //         contact.name.toLowerCase().includes(filter.toLowerCase())\n  //       );\n\t// \t\t}\n\t// \t}\n\t// \treturn;\n  // };\n\n  const isVisibleContacts = () => {\n    //  console.log(\"contacts: \", contacts);\n    if (contacts.length !== 0 && typeof contacts !== 'string') {\n         return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return [];\n  };\n\n   const changeFilter = evt => {\n      setFilter(evt.target.value);\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Phonebook</h1>\n      <div className={css.wrap}>\n        <ContactForm />\n      </div>\n      <h2 className={css.titleSection}>Contacts</h2>\n        \n      <Filter filter={filter} onChange={changeFilter} />\n     {/* { isLoading && <ContactList contacts={isVisibleContacts()} />} */}\n      <ContactList contacts={isVisibleContacts()} />\n          \n      \n      {/* {filteredContacts.length\n            ? <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={deleteContacts} />\n            : null} */}\n    </div>\n  );\n};\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","state","contacts","getIsRefreshing","isRefreshing","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","isChanging","handleChange","evt","target","value","reset","onSubmit","preventDefault","find","contact","toLocaleLowerCase","toast","addContact","className","css","onChange","type","placeholder","pattern","title","required","disabled","theme","autoClose","ContactItem","id","changeName","setChangeName","changeNumber","setChangeNumber","changeContact","setChangeContact","onClick","editContact","deleteContact","propType","PropTypes","map","data","filter","PhoneBook","setFilter","changeFilter","useEffect","fetchContacts","length","toLowerCase","includes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}